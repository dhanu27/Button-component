{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","variants","size","colors","useState","variant","setVariant","disable","setDisable","selectedColor","setColor","selectedSize","setSize","iconPosition","setIconPos","handleChange","event","target","name","value","checked","GroceryIcon","color","fontSize","className","Grid","class","container","spacing","alignItems","justifyContent","item","xs","InputLabel","id","Checkbox","onChange","Select","labelId","e","map","v","indx","MenuItem","RadioGroup","FormControlLabel","control","Radio","label","Button","disabled","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc36586.chunk.js","sourcesContent":["import \"./App.css\";\nimport {\n  Button,\n  Grid,\n  Select,\n  MenuItem,\n  InputLabel,\n  Radio,\n  FormControlLabel,\n  RadioGroup,\n  Checkbox,\n} from \"@mui/material\";\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let variants = [\"contained\", \"text\", \"outlined\"];\n  let size = [\"small\", \"medium\", \"large\"];\n  let colors = [\"primary\", \"secondary\", \"warning\", \"error\", \"info\", \"inherit\"];\n  const [variant, setVariant] = useState(variants[0]);\n  const [disable, setDisable] = useState(false);\n  const [selectedColor, setColor] = useState(colors[0]);\n  const [selectedSize, setSize] = useState(size[0]);\n  const [iconPosition, setIconPos] = useState(\"\");\n\n  const handleChange = (event) => {\n    if (event.target.name === \"variant\") {\n      setVariant(event.target.value);\n    } else if (event.target.name === \"disable\") {\n      setDisable(event.target.checked);\n    } else if (event.target.name === \"color\") {\n      setColor(event.target.value);\n    } else if (event.target.name === \"size\") {\n      setSize(event.target.value);\n    } else if (event.target.name === \"position\") {\n      setIconPos(event.target.value);\n    }\n  };\n\n  const GroceryIcon = () => {\n    return (\n      <AddShoppingCartIcon\n        color=\"inherit\"\n        fontSize=\"inherit\"\n      ></AddShoppingCartIcon>\n    );\n  };\n  return (\n    <div className=\"App\">\n      <Grid class=\"filter-area\">\n        <Grid\n          container\n          spacing={2}\n          alignItems=\"baseline\"\n          justifyContent=\"space-between\"\n        >\n          <Grid item xs={2}>\n            <InputLabel id=\"chk-disable\">Disabled</InputLabel>\n          </Grid>\n          <Grid item xs={2}>\n            <InputLabel id=\"variant-label\">Choose Variants</InputLabel>\n          </Grid>\n          <Grid item xs={2}>\n            <InputLabel id=\"color-label\">Choose Color</InputLabel>\n          </Grid>\n          <Grid item xs={2}>\n            <InputLabel id=\"size-label\">Choose Size</InputLabel>\n          </Grid>\n          <Grid item xs={2}>\n            <InputLabel id=\"size-label\">Icon Position</InputLabel>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          spacing={2}\n          alignItems=\"baseline\"\n          justifyContent=\"space-between\"\n        >\n          <Grid item xs={2}>\n            <Checkbox\n              name=\"disable\"\n              checked={disable}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Select\n              labelId=\"variant-label\"\n              value={variant}\n              name=\"variant\"\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            >\n              {variants.map((v, indx) => {\n                return (\n                  <MenuItem value={v} key={\"v\" + indx}>\n                    {v}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </Grid>\n          <Grid item xs={2}>\n            <Select\n              labelId=\"color-label\"\n              value={selectedColor}\n              name=\"color\"\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            >\n              {colors.map((v, indx) => {\n                return (\n                  <MenuItem value={v} key={\"c\" + indx}>\n                    {v}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </Grid>\n          <Grid item xs={2}>\n            <Select\n              labelId=\"size-label\"\n              value={selectedSize}\n              name=\"size\"\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            >\n              {size.map((v, indx) => {\n                return (\n                  <MenuItem value={v} key={\"s\" + indx}>\n                    {v}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </Grid>\n          <Grid item xs={2}>\n            <RadioGroup\n              name=\"position\"\n              value={iconPosition}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value=\"start\"\n                control={<Radio />}\n                label=\"start-icon\"\n              />\n              <FormControlLabel value=\"\" control={<Radio />} label=\"No Icon\" />\n              <FormControlLabel\n                value=\"end\"\n                control={<Radio />}\n                label=\"end-icon\"\n              />\n            </RadioGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Button\n        disabled={disable}\n        color=\"primary\"\n        variant={variant}\n        color={selectedColor}\n        size={selectedSize}\n        startIcon={iconPosition === \"start\" && <GroceryIcon />}\n        endIcon={iconPosition === \"end\" && <GroceryIcon />}\n        style={{ margin: \"44px\" }}\n      >\n        Default\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}